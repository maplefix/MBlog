<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.maplefix.mapper.TagMapper">

    <resultMap type="top.maplefix.model.Tag" id="TagResult">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="color" column="color"/>
        <result property="count" column="count"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <select id="selectTagList" parameterType="top.maplefix.model.Tag" resultMap="TagResult">
        select t.id,
        t.title,
        t.color,
        t.create_date,
        t.update_date,
        count(tm.id) as count
        from t_tag t left join t_blog_tag_mid tm
        on t.id=tm.tag_id
        <where>
            1=1
            <if test="title != null and title != ''">
                AND t.title like concat('%', #{title}, '%')
            </if>
            <if test="params.beginDate != null and params.beginDate != ''"><!-- 开始时间检索 -->
                and date_format(t.create_date,'%y%m%d') &gt;= date_format(#{params.beginDate},'%y%m%d')
            </if>
            <if test="params.endDate != null and params.endDate != ''"><!-- 结束时间检索 -->
                and date_format(t.create_date,'%y%m%d') &lt;= date_format(#{params.endDate},'%y%m%d')
            </if>
            group by t.id
        </where>
    </select>

    <select id="selectTagById" resultMap="TagResult">
        select t.id,
        t.title,
        t.color,
        count(tm.id) as count
        from t_tag t
        left join t_blog_tag_mid tm
        on t.id=tm.tag_id
        where t.id = #{id}
    </select>

    <select id="selectTagByTitle" resultType="top.maplefix.model.Tag">
        select t.id,
        t.title,
        t.color
        from t_tag
        where title = #{title}
    </select>

    <select id="selectTagListByType" resultType="top.maplefix.model.Tag">
        select t.id,
        color,
        title,
        create_date,
        update_date
        from t_tag t
        left join t_blog_tag_mid tm on t.id=tm.tag_id
        where tm.id=#{id}
    </select>


    <insert id="insertTag" parameterType="top.maplefix.model.Tag" useGeneratedKeys="true" keyProperty="id">
        insert into t_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null  and title != ''">title,</if>
            <if test="color != null  and color != ''">color,</if>
            <if test="createDate != null  and createDate != ''">create_date,</if>
            <if test="remark != null  and remark != ''">remark</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null  and title != ''">#{title},</if>
            <if test="color != null  and color != ''">#{color},</if>
            <if test="createDate != null  and createDate != ''">#{createDate},</if>
            <if test="remark != null  and remark != ''">#{remark}</if>
        </trim>
    </insert>
    <insert id="insertTagMid">
        insert into t_blog_tag_mid
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blogId != null">blog_id,</if>
            <if test="tagId != null">tag_id</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="blogId != null">#{blogId},</if>
            <if test="tagId != null">#{tagId}</if>
        </trim>
    </insert>

    <update id="updateTag" parameterType="top.maplefix.model.Tag">
        update t_tag
        <set>
            <if test="title != null  and title != ''">title = #{title},</if>
            <if test="color != null  and color != ''">color = #{color},</if>
            <if test="updateDate != null  and updateDate != ''">update_date = #{updateDate},</if>
            <if test="remark != null  and remark != ''">remark = #{remark}</if>
        </set>
        where id = #{id}
    </update>


    <delete id="deleteTagByIds">
        delete from t_tag where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteTagMid">
        delete from t_blog_tag_mid
        <choose>
            <when test="blogId==null and tagId==null">
                where 1=2
            </when>
            <otherwise>
                where 1=1
            </otherwise>
        </choose>
        <if test="blogId != null">
            AND blog_id =#{blogId}
        </if>
        <if test="tagId != null">
            AND tag_id =#{tagId}
        </if>
    </delete>

</mapper>
