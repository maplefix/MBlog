<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.maplefix.mapper.OperateLogMapper">

    <resultMap type="top.maplefix.model.OperateLog" id="SysOperateLogResult">
        <id property="id" column="id"/>
        <result property="module" column="module"/>
        <result property="businessType" column="business_type"/>
        <result property="method" column="method"/>
        <result property="requestMethod" column="request_method"/>
        <result property="operateName" column="operate_name"/>
        <result property="url" column="url"/>
        <result property="ip" column="ip"/>
        <result property="os" column="os"/>
        <result property="location" column="location"/>
        <result property="browser" column="browser"/>
        <result property="param" column="param"/>
        <result property="cost" column="cost"/>
        <result property="result" column="result"/>
        <result property="status" column="status"/>
        <result property="exceptionMsg" column="exception_msg"/>
        <result property="createDate" column="create_date"/>
    </resultMap>

    <sql id="selectOperateLogVo">
        select id,
               module,
               business_type,
               method,
               request_method,
               cost,
               operate_name,
               url,
               ip,
               location,
               os,
               browser,
               param,
               result,
               status,
               exception_msg,
               create_date,
               update_date
        from t_operate_log
    </sql>

    <insert id="insertOperateLog" parameterType="top.maplefix.model.OperateLog">
        insert into t_operate_log(module, business_type, method, request_method, operate_name, url, ip,
                location, os,browser, param, result, status, exception_msg, create_date, cost)
        values ( #{module},#{businessType}, #{method}, #{requestMethod}, #{operateName}, #{url}, #{ip},
                #{location}, #{os},#{browser},#{param}, #{result}, #{status}, #{exceptionMsg}, #{createDate}, #{cost})
    </insert>

    <select id="selectOperateLogList" parameterType="top.maplefix.model.OperateLog" resultMap="SysOperateLogResult">
        <include refid="selectOperateLogVo"/>
        <where>
            <if test="module != null and module != ''">
                AND module like concat('%', #{module}, '%')
            </if>
            <if test="businessType != null">
                AND business_type = #{businessType}
            </if>
            <if test="businessTypes != null and businessTypes.length > 0">
                AND business_type in
                <foreach collection="businessTypes" item="businessType" open="(" separator="," close=")">
                    #{businessType}
                </foreach>
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="operateName != null and operateName != ''">
                AND operate_name like concat('%', #{operateName}, '%')
            </if>
            <if test="params.beginDate != null and params.beginDate != ''"><!-- 开始时间检索 -->
                and date_format(create_date,'%y%m%d') &gt;= date_format(#{params.beginDate},'%y%m%d')
            </if>
            <if test="params.endDate != null and params.endDate != ''"><!-- 结束时间检索 -->
                and date_format(create_date,'%y%m%d') &lt;= date_format(#{params.endDate},'%y%m%d')
            </if>
        </where>
    </select>

    <delete id="deleteOperateLogByIds">
        delete from t_operate_log where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectOperateLogById" resultMap="SysOperateLogResult">
        <include refid="selectOperateLogVo"/>
        where id = #{id}
    </select>

    <update id="cleanOperateLog">
        truncate table t_operate_log
    </update>
    <update id="updateOperateLog">
        update t_operate_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="module != null ">module = #{module},</if>
            <if test="businessType != null  and businessType != ''">business_type = #{businessType},</if>
            <if test="method != null  and method != ''">method = #{method},</if>
            <if test="requestMethod != null  and requestMethod != ''">request_method = #{requestMethod},</if>
            <if test="cost != null ">cost = #{cost},</if>
            <if test="operateName != null  and operateName != ''">operate_name = #{operateName},</if>
            <if test="url != null  and url != ''">url = #{url},</if>
            <if test="ip != null and ip !='' ">ip = #{ip},</if>
            <if test="os != null and ip !=''">os = #{os},</if>
            <if test="browser != null and browser !='' ">browser = #{browser},</if>
            <if test="location != null and location !=''">location = #{location},</if>
            <if test="param != null and param !=''">param = #{param},</if>
            <if test="result != null and result !=''">result = #{result},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="exceptionMsg != null and exceptionMsg !=''">exception_msg = #{exceptionMsg},</if>
            <if test="updateDate != null and updateDate !=''">update_date = #{updateDate}</if>
        </trim>
        where id = #{id}
    </update>

</mapper>
